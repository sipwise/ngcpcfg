{
  "comments": [
    {
      "key": {
        "uuid": "6119a3d0_cb6ce443",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2020-03-19T18:56:00Z",
      "side": 1,
      "message": "Hmmm, who is triggering these parallel runs? Is this coming from ngcpcfg itself, or something else? Is there danger of dropping content from the later process? Or is there no ordering involved?\n\nIt feels to me that regardless of the above, using a lock file would be the proper course of action here?",
      "revId": "2344b9e59f22485743f6d14fe8e212fd78e3fba8",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440b9dd3_891e0e17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-03-20T08:19:59Z",
      "side": 1,
      "message": "Ops do upgrade huge carriers in parallel, different people upgrades different proxy servers, etc.\n\nJenkins start noticing this problems, because Mykola created carrier-upgrade test which upgrade proxy nodes in parallel like Ops do.\n\nLock will affect default use case here, as the last \"ngcpcfg push\" in upgrade scenario will fail for some users due to lock. Maybe we should \"wait\" instead of \"fail\" if lock exist. More (ugly? in shell) code should be written in this case. This approach was a simple solution for corrupted file we can have.\n\nPlease share your vision here.",
      "parentUuid": "6119a3d0_cb6ce443",
      "revId": "2344b9e59f22485743f6d14fe8e212fd78e3fba8",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85051c8a_af94625b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-03-20T10:28:20Z",
      "side": 1,
      "message": "Some details:\n\n1. Parallel upgrades work well but this very problem.\n\n2. This is the 1st step to handle parallel ngcpcfg so some lock mechanism will be added.\n\n3. This is a fast and light fix which unblocks parallel upgrade on jenkins which in turn really speeds up the tests.",
      "parentUuid": "440b9dd3_891e0e17",
      "revId": "2344b9e59f22485743f6d14fe8e212fd78e3fba8",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0af663c_e7b25a86",
        "filename": "hooks/pre-commit",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-03-20T08:17:15Z",
      "side": 1,
      "message": "See commit 6e6c308ba5679474cec92e75d6d16a9fdaba478b to this repo,\nis it still topical for modern Docker version we have nowadays?",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 111,
        "endChar": 2
      },
      "revId": "2344b9e59f22485743f6d14fe8e212fd78e3fba8",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bc463d3_5665b135",
        "filename": "hooks/pre-commit",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-03-20T14:31:37Z",
      "side": 1,
      "message": "The mentioned workaround is needed (even now) as /etc/hosts is not a common file within container but is a special bind mount thing. /etc/ngcp-config/.ngcpcfg_perms is a common file so we can do whatever we want with it inside the container.\n\nHere are successful docker builds with this PPA:\n\nstretch https://jenkins.mgm.sipwise.com/job/docker-build-spce/1228/\n\nbuster https://jenkins.mgm.sipwise.com/job/docker-build-spce/1227",
      "parentUuid": "b0af663c_e7b25a86",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 111,
        "endChar": 2
      },
      "revId": "2344b9e59f22485743f6d14fe8e212fd78e3fba8",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": true
    }
  ]
}