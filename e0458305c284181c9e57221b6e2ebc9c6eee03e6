{
  "comments": [
    {
      "key": {
        "uuid": "45a86b2a_71760609",
        "filename": "helper/sync-db",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2019-10-08T17:34:18Z",
      "side": 1,
      "message": "Good. Setting these as undef would mean DBI might end up using the DBI_USER and DBI_PASS environment variables which are also a security risk.",
      "range": {
        "startLine": 67,
        "startChar": 6,
        "endLine": 67,
        "endChar": 12
      },
      "revId": "e0458305c284181c9e57221b6e2ebc9c6eee03e6",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca3857ac_97c9e435",
        "filename": "helper/sync-db",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2019-10-09T10:03:31Z",
      "side": 1,
      "message": "To be sure, I set here empty string, not undef, so we are fine. Right? I believe yes, as you gave me +2.\n\nP.S. it is a code from Perl DBI best practices.",
      "parentUuid": "45a86b2a_71760609",
      "range": {
        "startLine": 67,
        "startChar": 6,
        "endLine": 67,
        "endChar": 12
      },
      "revId": "e0458305c284181c9e57221b6e2ebc9c6eee03e6",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "968278a5_7adfd844",
        "filename": "helper/sync-db",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2019-10-09T10:14:30Z",
      "side": 1,
      "message": "Yes good. I was just suspicious of the empty string so checked the DBI docs, and it looks right to me.",
      "parentUuid": "ca3857ac_97c9e435",
      "range": {
        "startLine": 67,
        "startChar": 6,
        "endLine": 67,
        "endChar": 12
      },
      "revId": "e0458305c284181c9e57221b6e2ebc9c6eee03e6",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "505efa11_4dc6f947",
        "filename": "helper/sync-db",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2019-10-09T16:49:30Z",
      "side": 1,
      "message": "i tested https://paste.mgm.sipwise.com/show/5942/ inside a vagrant, and it shows\n\n[sipwise-lab-trunk] sipwise@spce:/vagrant$ perl test_dbi.pl \nDBI connect(\u0027database\u003dbilling;host\u003dlocalhost;port\u003d3306;mysql_read_default_file\u003d/etc/mysql/sipwise_extra.cnf\u0027,\u0027\u0027,...) failed: Access denied for user \u0027sipwise\u0027@\u0027localhost\u0027 (using password: NO) at test_dbi.pl line 9.\n\nit uses the logged-in system user as username, an no password, wether emtpy string or undef credential args. the content of the file mysql_read_default_file seems to be always ignored, only passing the credentials explicitly to -\u003econnect() worked.\n\nthe suggestion in https://www.perlmonks.org/?node_id\u003d519337 seems to work only if all params (database, host, ..) come for the file, ie. the dsn string looks exactly like\n\nDBI:mysql:;mysql_read_default_file\u003d$dbcredentials",
      "parentUuid": "968278a5_7adfd844",
      "range": {
        "startLine": 67,
        "startChar": 6,
        "endLine": 67,
        "endChar": 12
      },
      "revId": "e0458305c284181c9e57221b6e2ebc9c6eee03e6",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    }
  ]
}